# Custody
The second module, we're going to explore supply in ownership. I'll talk about custody, how we adjust supply and incentives. Let's dig into it. Let's start with custody. The first concept that's of critical importance and DeFi is this idea of escrow.
Play video starting at ::30 and follow transcript0:30
It is a basic primitive within decentralized finance so that we can actually put funds somewhere in escrow or essentially custody the funds directly in a smart contract. I guess so this is again different. We're always thinking in terms of centralized finance. But you would have in centralized finance and escrow agent. It might be a bank that is basically holding your money and you need to trust that bank or that escrow agent. This completely different. This is the ability to escrow within a contract. Basically there is an approval, it goes into the pool and you retain your share of that pool. You've got an equity token think of that in terms of your share. This is an important concept that we'll talk about, a fair bit in the course. This ability to escrow opens up so many possibilities. It gives the possibility of, we can retain fees within the contract, we can disperse incentives, we can facilitate token swaps. Again, think of this as you've got a contract that's got something in it already and you're swapping within that contract. We will talk in some detail today and in this course about bonding curves and what that actually means. We can do collateralized loans, we can run auctions, we can even do insurance. Custody in terms of escrow, opens up so many possibilities. It's also the case that you need to be careful.
Play video starting at :2:51 and follow transcript2:51
If you put your money at the bank, if the bank fails and if it's not too much money, the government will essentially bail you out. It's called deposit insurance. If you're above the amount that they covered, then you're a loser. There's nothing like that in the world of DeFi. There is a growing interest in the equivalent of deposit insurance called DeFi insurance, but that's really early on. Remember, we're at less than 1 percent into this disruption. You need to be careful that you don't send your escrow to a contract where you can't get it out. The contract needs to have mechanism for you to actually release the funds. This is under the heading of smart contract risk, which we explore in considerable detail in the fourth course. DeFi risks and opportunities.

# Supply adjustments
The second subpart is supply adjustment. This is very important also to understand. Let's get started. In the word cloud, you probably remember the word burn. We know what burning is, but what is burning in DeFi? Well, it's simple. It's reducing supply. You remove it from circulation. It's actually similar to what actually happens with physical currency when it wears out. The worn dollar bills are actually burned and new ones are printed. There's different ways to do burning. You could basically send the token to an unowned Ethereum address. That's an address that nobody's got the private key for. A better way to do it is to send to a contract that is incapable of actually spending the token. There's no way to spend it, so it just sits there forever. I say it's a better way because I mentioned the possibility in the future of potentially going the other way from a public key to a private key. The unowned address potentially in the future could become owned. It's much better to send to a contract that is incapable of spending, and there's no way to modify that contract. The contracts there. It's got no mechanism to change the very important property of no spending and is there forever. In the Ethereum blockchain, it is immutable.
Play video starting at :2:8 and follow transcript2:08
Basically what happens here? Obviously, when you burn, that token does not become usable. Maybe it's a little curious to think about. We understand in centralized finance why you do this. Well, the cash currency just gets worn out, it's torn, tattered, and then we replace it. This is different. We're just burning. What would you want to do that for? We'll explore that. There's also burning mistakes.
Play video starting at :2:51 and follow transcript2:51
It might be that you think you're sending to somebody some Ethereum, but you sent to the wrong address. That address might be unowned, and that Ethereum is gone. That's basically what I call a burning mistake, where you basically burned your own Ethereum. There are various different mechanisms to reduce the possibility that this happens. There's the EIP-55 which you can look up. EIP is Ethereum improvement protocol number 55. It's actually suggested by Vitalik, and it's very elegant. It's basically a checksum. When you put your address in that you're sending to, there'll be a check that's run. It will flag most of the time if that address is invalid because it would not pass the checksum, and that means that the transaction fails. This happens before. Think of this as the checksum is done. If it fails, then there is no transaction. Remember, all transactions are atomic. If it fails, you resort to the original state like nothing has happened. This is something that Ethereum's got, that Bitcoin's got. Most cryptos have a checksum capability. Nevertheless, you can still make mistakes, and many have lost their token due to a mistake in burn. Why would we burn? It turns out it's pretty simple. Think of an equity token. You represent, let's say 10 percent of a pool. There's a pool that has got 100 ether in it and you've actually contributed 10. You've got 10 percent of the ownership of that pool, and there's a token that's issued to you that basically represents 10 percent of that pool. Well, suppose you want to redeem the 10 ether. Well, no problem, you send in your token that's worth 10 percent of the pool and 10 ether transferred to you and the token that you send is burned. You no longer own 10 percent of the pool, it's gone, it's burned. This is one application in terms of redemption of a pool. We talked about in this first course this change in the Ethereum that will likely happen where the base gas fee will be burned. Instead of going to the mining or the miners, the gas in ether will be burned and that will serve to reduce the inflation and ether and potentially make it more valuable. There's other possibilities here. Burning is used and some protocols to increase value. The idea here is if there's fewer tokens out there then the value should actually increase. Then another logical application is to penalize bad acting. You do something, you prove a transaction that was a bad transaction, then your stake will be at least in part burned. This is quite a common thing in terms of supply adjustment. Of course the other side is minting. Again, we think about minting in terms of centralized finance. It's the same idea. That is that you're going to increase the supply of tokens in circulation. In Bitcoin every 10 minutes there is some minting. That goes on until 2140 when there's no more minting. DeFi protocols are much more general.
Play video starting at :7:47 and follow transcript7:47
Minting is different than burning and that there's no right way to think about accidentally minting. You can accidentally burn by sending to the wrong address, but this is just not possible to do so the minting would be part of the actual smart contract, so you'd be able to see the rules. This is also very important. Even though the supply might not be fixed, like Bitcoin, you actually know it's very transparent from the contract what the actual rules are in terms of the inflation. These rules can be directly encoded into the smart contract.
Play video starting at :8:41 and follow transcript8:41
Minting, we'll talk about in another sense in that it could be very useful in terms of incentivizing a range of user behavior. There's one thing that's really different about DeFi, that you can start a new idea and then you can easily incent people to actually use your idea. Download the DAP and will give you a 100 of the token. Basically for something as simple as downloading an app, you're paid directly. Then if you use the app, you get paid. This idea of minting for incentives is very important and it just makes it a lot easier to startup. Or is much more difficult to do this in just the regular world of traditional finance? Where the idea of paying somebody to download your app would literally have to go through the banking system and it would be a nightmare how to actually do that. On top of that, you'd have to raise a lot of money to actually pay people in dollars. Whereas a new protocol is minting their own coin. It's really easy and there's far fewer barriers to entry to come in and do something interesting. Again, there's a number of examples here. I've already given you the key example of if you enter a pool there would be a minting of a token that is an equity token to represent your share. If you exit that pool, then that token when you send it to the contract would be burned.
Play video starting at :10:52 and follow transcript10:52
That is the most tangible idea of minting and burning and we'll explore that in a number of applications in the course.
Play video starting at :11:6 and follow transcript11:06
Let me return to this idea of how minting can actually lead to another type of incentive mechanism. Minting is again very common in the world of DeFi. Indeed, there is essentially a competition amongst the DeFi apps. Everybody is basically looking for the best app to use. One thing you would look for is the best possible rate for savings, for example, and that might be an interest rate plus an incentive. There's a competitive market whereby these incentives change to try to attract users to the particular protocol. We mentioned briefly in the first course this idea of yield farming. This is basically a situation where you engage in actions to get the highest possible of reward. You've got money in a liquidity pool that's earning some savings rate. You have a utility token. Then you deploy that utility token because this is valuable. It's basically representing, let's say 10 percent of that pool. You can deploy that to another DeFi protocol and earn another level of interest. The very popular thing today, you do need to be careful because some of these protocols are riskier than others and some people are being taken advantage of. But nevertheless, this is one advantage of having a mechanism like this where you can very easily mint an equity token and then just redeploy it. It is ERC20, which means it could be redeployed in another context. Next, we need to talk about bonding curves. A bonding curve is basically an algorithmic representation of a pricing relationship. You can buy off the curve and sell to the curve. This is just a mathematical function, and I'm going to go through plenty of examples. This is important stuff in terms of how supply actually works. Let's start with a very simple bonding curve, and it's going to be a linear curve. Again, we'll use our hypothetical token, TKN, or token. That is going to denominate a price or token that is denominated in ether. It could be any Anethum, I'm just choosing ether for a simple example. S is going to represent the supply. The simplest bonding curve would be token equals 1 or any constant. This means that the value of token is pegged to ethereum, one for one. It's very, very simple. Idea is that algorithmically said that token represents one Ethereum. If you had Ethereum in this pool with this rule, if you send one token, then you get one Ether and vice versa. Very simple. It's not a very good one. It's not a great rule because you can imagine that in some other market, and we'll talk about these other markets, in some other market that the value of token goes actually well below the price of Ether. What people would do is just go to some other market, let's say Coinbase, buy token, and then exchange the token which they bought for, let's say half an Ether for a full Ether. So it's not a great model at all. Let's do this a little more generally to a linear bonding curve. A linear bonding curve, a linear equation has got a slope and an intercept. The slope is m and the intercept is b. Let's consider a very simple linear bonding curve where the slope is one and the intercept is zero. Again, this is a function of the supply, so it's one times a supply. The first token would cost you one Ether. The second one would cost you two, the third one, three. This is a very simple linear bonding curve and it is constructed in a way that the people that are buying token early on are getting a really good deal. If you're the first in, you're only paying one Ether but if you're the third one in, you're paying three. It is a way to incent people to get in early. This is an example of a linear bonding curve with the equation that I suggested. Here, Alice is going to buy five token. We already went through the cost of the first and the second and the third, but if we just add it up, the five tokens are going to cost 1, 2, 3, 4, 5 and the total amount that Alice is going to pay is 15.
Play video starting at :17:33 and follow transcript17:33
Alice is the first one in, and Carol is the second one, and then Carol is going to buy five token. The cost for Carol, that sixth token is going to cost six, and then 7, 8, 9, 10. To get the next five, it's going to cost 40 Ether. Now, suppose that Alice, as the first one in, decides to sell. After Carol buys and there's a total of 10 outstanding, then Alice decides to sell her five token. The revenue that she's going to get off the sale is 10, 9, 8, 7, and 6, a total of 40. Think about what's happened to Alice as she is the first one in. She actually paid 15 for the five and was able to sell. Again, this is completely algorithmic, so there's no broker or anything like that here. It's completely algorithmic. The revenue from the sale is 40, and what she paid was 15. Given that she was the early investor, she actually makes a profit here of 25 Ether. This is just an example of a linear bonding curve. Just to be clear here, this is a smart contract. This isn't trading with a broker. This isn't trading on Coinbase. We're essentially doing an exchange here, so buying a token. We're actually swapping. We're swapping Ethereum for the token and the token for Ether. This is basically an example of decentralized exchange. This is again, a very significant innovation because we're actually doing this without a broker, without a middle person at all. This is a very simple bonding curve. Essentially what's happening here as traders or users are purchasing the token, the binding curve is escrowing the funding. When Alice and Carol were buying the contract, is escrowing the Ether. Then that Ether is deployed to actually pay back a little later on. This is a powerful contract and idea in general. We could actually think of a different way of doing this. We've looked at a linear curve. We could do it like a super linear curve or non-linear curve. This is a quadratic curve. Let's go through the mechanics of this. In this particular equation, we've got, instead of the equation that we had with the intercept of zero and a slope of one, times S, now we've got again no intercept, but M is also one, but S is squared. You can see the dynamics. For example, Alice buys two token. This is minting. Two token are actually created. What is the cost? The first one is one, the second one is four. Two squared is four. The total cost for Alice is five. Then Carol jumps in and she wants to buy another two token. Into the contract, Carol puts nine for the third and 16 for the fourth. Total cost at 25 Ether, and the contract prints two token. Now the total supply is four token. Now, just like the previous example, Alice decides to sell her two token. This would be burning. Those two token go back to the contract. The two Token are destroyed and Alice is able to essentially come up with the revenue and that burning. The revenue essentially is going to be 16. That's the fourth token. Then nine is the third, so total of 25. The profit for the early buyer, which is Alice, is going to be that revenue from selling, which is 25 minus the initial cost, which is five, so the total profit is 20. Of course. I've shown you two really simple examples, and this is a much more general idea. This is an example of a logistic curve. The idea here is that there are strong incentives early on. Early on it looks superlinear. You want to get in early because the price is really cheap in terms of token. However, the curve flattens out at some point. That's what a logistic or sigmoid bonding curve actually looks like. It's much more common to have a function like this where essentially a lot happens within a narrow range, but the same idea applies as the previous examples. It's also possible to have a different bonding curve for buying and selling. Again, this is very general, is just an algorithm within a contract. If it happens like this, there's actually a spread. Where does that spread go? Spread is kept by the contract. It basically adds to the escrow. As many different possibilities in terms of using these bonding curves.

# Incentives
I've talked about incentives somewhat, but I want to go into a little more detail because incentives are so important for decentralized finance. There are two general types of incentive. One is called a staked incentive. Think of this as you're staking or contributing liquidity to a pool. You get an incentive for actually doing that. Very analogous to some reward for providing liquidity. Then there are direct incentives.
Play video starting at ::47 and follow transcript0:47
This applies to users within the system that might not be having an escrow balance, so to get people to actually use the system. These are the two general categories. A staking reward, again, is something where you put some money into a pool and you receive a bonus, think of it that way, based upon the stake that you've actually got in the system. There's various different ways to implement this. You might need a minimum balance to actually receive some reward. The reward might be a fixed payout, it might be pro-rata payout. It might be that the staking reward is the same token as the liquidity pole, or it might be a different token. It might be a governance token. There's many different ways to actually do this in the DeFi world. An example of a firm that is a leading firm that we talk about in considerable detail in the third course, a DeFi deep dive, is compound, so compound protocol is a leading protocol. They have rewards based upon their COMP token. Essentially, the COMP token is going to fix supply. There is a reward for stake balances on a pro-rata basis. Synthetics, which we also talk about in DeFi, a deep dive, they've got a SNX token. In contrast, the COMP has got technically unlimited supply. The rewards are paid out as inflation on the token, and it has got a minimum threshold requirement. There's many different ways to actually do these incentives. We explore these in much more detail in DeFi deep dive. The other side is slashing. Slashing is the removal of a portion of the staked balance. It might be that that occurs as a result of some undesirable event, and that might be you violate your collateralization ratio, something like that. Then there would be some slashing. The slashing condition, so again, think of the word cloud that I showed you at the beginning and the end of the first course. This is something that is up there. Slashing, again, we know what it means, but within the world of DeFi, a slashing condition is a mechanism that triggers a slashing.
Play video starting at :4:11 and follow transcript4:11
There's many different ways to do slashing. There could be a complete slash, which means that everything that you've got is gone, or it could be a partial slash. For example, if you fell below a collateralization ratio, I've got plenty of examples on this, then it could be a partial slash. There are many different conditions that would trigger a slash. I've mentioned undercollateralization, but there could be malicious behavior or basically changes in market conditions in terms of volatility or price movements that are basically the causal influence in terms of the slashing of potential not just one user, but many user's balances. So we will talk about collateralization a lot, especially in the third course. But let me give a tangible example here about what I mean here. So if you've got a situation where you are borrowing and you are essentially over collateralized, so the collateral is crypto, crypto is volatile, so it has to be that you put up more collateral than you're actually borrowing. Why would you do that? Well, you need some money, but you don't want to sell the crypto. You think it's going to go up in value, right? This is just like a mortgage. With a mortgage, your house is worth far more than the mortgage. So it's kind of the same idea. But there's a mechanism whereby if you drop below your collateralization ratio, so if you had to pledge a 150 percent of your loan and the collateral, but the value of the collateral drops below that, then there's a mechanism to liquidate your loan. Okay? Basically there would be a slashing that's involved when that actually happens. There will be somebody that actually does that, called the keeper, which we mentioned in the first course, and there'd be a fee that actually goes to that keeper. So slashing happens. It's not necessarily a result of doing something nefarious. It's just part of how the system works. So direct rewards, and again, keepers, we've talked about already. So direct and more rewards are incentives to basically have the protocol work as it should. You want people involved. If nobody is involved, then it really isn't working. You want all of the rules followed very carefully, like the collateralization, and you need some help in doing that. This is important that the triggering of a liquidation due to undercollateralization, that doesn't happen within the smart contract. That happens externally. So it's initiated from an externally owned address and a keeper would actually do that. So people are using algorithms to check to see if there's something does undercollateralized and soon as they see that they liquidate and collect their fee. It happens quickly, but everything is initiated from an externally owned contract. Nothing happens automatically here. But once it is triggered by an externally owned account, it happens very quickly and very efficiently. There is a number of applications here in terms of what keepers actually do to rewards that they get, and again, this is all triggered externally. So what about these keepers? We've talked about them a little bit. The keeper can receive a reward in many different ways. It could be a flat fee for doing the job. It could be a percentage of the actual action. It just completely depends upon how the protocol has actually developed. Okay, so it's also possible that there's literally like an auction where the keepers are bidding on the work. So it's very market-based and very competitive. Again, it's all incentive compatible because this basically keeps the system running as it should be running. We reward people, we effectively pay people to maintain the system, and those are called the keepers. There's some downside, of course. If gas prices are really high, then it might not make sense for the keeper to actually do the work for smaller balances. That poses some risk. As the gas fee is reduced, as I believe it will be reduced, then the system becomes more and more efficient. This is a very important distinction here. That high gas fee actually discourages the type of behavior that makes the system efficient. It is important that that fee is reduced so even if it's a small balance and it's under collateralized, it's taken care of and if the gas fee is too high, then it isn't. There are some downside. You think about fees, these are basically funding mechanisms. Again, they can be flat or percentage based and basically, this is a way, for example, for stake balance, you get rewarded for directly. It's an incentive to actually provide liquidity.
Play video starting at :11:16 and follow transcript11:16
One thing that is important here is that the fees are multi-dimensional. We talk about a concept like fees, but fees mean many different things. One thing to take into account is that, well, Ethereum and Bitcoin are not really anonymous protocols, they're pretty close to it so you actually don't know who is getting the fee. Basically, this is a bit of a challenge in terms of how this operates. The contract is open to anybody.
Play video starting at :12:17 and follow transcript12:17
Given that there's algorithmic on the Ethereum blockchain, everything has to be backed by collateral at this point. There's no credit, so to speak, that's uncollateralized with the exception of flash loans, but we'll talk about later. Again, we use these systems in terms of fees, penalties also to enforce the proper behavior to incent people on an economic basis. We don't have other mechanisms. We don't have the mechanisms of centralized finance in terms of reputation and things like that in the same way in decentralized finance. Again, it is a challenge, it is a new space and I expect that there are challenges. Again, this is important for us to understand that this space allows us to do things very quickly and easily to incent and to punish without the rule of law or lawsuits and lawyers and things like that. It's algorithmic. There's so many choices in terms of the way that you actually do it, but the key thing is that given the transparency of the smart contract, you get to see everything. It's there, you know the rules of the game. It's clear. If you go below the collateralization ratio, there'll be some slash, there will liquidation, you get something back, but not everything. It's codified. There's no dispute. It's there. There is no last minute changing of the rules because the rules are encoded in an algorithm.